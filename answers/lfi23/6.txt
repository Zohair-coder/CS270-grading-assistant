(define (get-variables expression) 
  (cond
    [(is-constant? expression) null]
    [(is-variable? expression) (list expression)]
    [(is-not? expression) (get-variables (second expression))]
    [else (remove-duplicates (append (get-variables (second expression)) (get-variables (third expression))))])
) 



#|
; Question 6: get-variables
(define (get-variables expression) <----------------------Too complex, simplify 
  (cond
    [(null? expression) null] 
    [(is-variable? expression) (list expression)]
    [else (remove-duplicates (foldr (Î» (x y) (cond    ; ask abt this----
                            [(is-variable? x) (cons x y)]
                            [(list? x) (append (get-variables x) y)]
                            [else y]))'() expression))])
  )|#

