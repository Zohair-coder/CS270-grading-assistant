(define (bool-eval expression environment)
  (cond
    [(is-constant? expression) (eval-constant expression environment)] ;Case 1 Constants
    [(is-variable? expression) (eval-variable expression environment)] ;Case 2 Variables
    [(is-or? expression) (eval-or expression environment)]             ;Case 3 or statements
    [(is-not? expression) (eval-not expression environment)] 
    [(is-and? expression) (eval-and expression environment)] 
    [(is-implies? expression) (eval-implies expression environment)] 
    [(is-iff? expression) (eval-iff expression environment)] 
    [else null])) ; note that this else case should never be hit because of the input contract

